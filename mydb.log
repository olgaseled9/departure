/*C17*/SET SCHEMA PUBLIC
DISCONNECT
/*C18*/SET SCHEMA PUBLIC
DISCONNECT
/*C19*/SET SCHEMA PUBLIC
DISCONNECT
/*C20*/SET SCHEMA PUBLIC
DISCONNECT
/*C21*/SET SCHEMA PUBLIC
DISCONNECT
/*C22*/SET SCHEMA PUBLIC
DISCONNECT
/*C23*/SET SCHEMA PUBLIC
DISCONNECT
/*C24*/SET SCHEMA PUBLIC
DISCONNECT
/*C25*/SET SCHEMA PUBLIC
DISCONNECT
/*C26*/SET SCHEMA PUBLIC
DISCONNECT
/*C27*/SET SCHEMA PUBLIC
DISCONNECT
/*C28*/SET SCHEMA PUBLIC
DISCONNECT
/*C29*/SET SCHEMA PUBLIC
DISCONNECT
/*C30*/SET SCHEMA PUBLIC
DISCONNECT
/*C32*/SET SCHEMA PUBLIC
DISCONNECT
/*C33*/SET SCHEMA PUBLIC
DISCONNECT
/*C34*/SET SCHEMA PUBLIC
DISCONNECT
/*C35*/SET SCHEMA PUBLIC
DISCONNECT
/*C36*/SET SCHEMA PUBLIC
DISCONNECT
/*C37*/SET SCHEMA PUBLIC
DISCONNECT
/*C38*/SET SCHEMA PUBLIC
DISCONNECT
/*C39*/SET SCHEMA PUBLIC
DISCONNECT
/*C40*/SET SCHEMA PUBLIC
DISCONNECT
/*C41*/SET SCHEMA PUBLIC
DISCONNECT
/*C42*/SET SCHEMA PUBLIC
DISCONNECT
/*C43*/SET SCHEMA PUBLIC
DISCONNECT
/*C44*/SET SCHEMA PUBLIC
DISCONNECT
/*C45*/SET SCHEMA PUBLIC
DELETE FROM PASSENGER WHERE PASSENGER_ID=1
COMMIT
DISCONNECT
/*C46*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C47*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
INSERT INTO PASSENGER VALUES(1,'Ivan','Ivanov','Ivanovich',1)
INSERT INTO PASSENGER VALUES(2,'Petr','Petrov','Petrovich',2)
COMMIT
DISCONNECT
/*C48*/SET SCHEMA PUBLIC
DISCONNECT
/*C49*/SET SCHEMA PUBLIC
DISCONNECT
/*C50*/SET SCHEMA PUBLIC
DISCONNECT
/*C51*/SET SCHEMA PUBLIC
DISCONNECT
/*C52*/SET SCHEMA PUBLIC
DISCONNECT
/*C53*/SET SCHEMA PUBLIC
DISCONNECT
/*C54*/SET SCHEMA PUBLIC
DISCONNECT
/*C55*/SET SCHEMA PUBLIC
DISCONNECT
/*C56*/SET SCHEMA PUBLIC
DISCONNECT
/*C57*/SET SCHEMA PUBLIC
DISCONNECT
/*C58*/SET SCHEMA PUBLIC
DISCONNECT
/*C59*/SET SCHEMA PUBLIC
DISCONNECT
/*C60*/SET SCHEMA PUBLIC
DISCONNECT
/*C61*/SET SCHEMA PUBLIC
DISCONNECT
/*C62*/SET SCHEMA PUBLIC
DISCONNECT
/*C63*/SET SCHEMA PUBLIC
DELETE FROM PASSENGER WHERE PASSENGER_ID=1
COMMIT
DELETE FROM PASSENGER WHERE PASSENGER_ID=2
COMMIT
DISCONNECT
/*C64*/SET SCHEMA PUBLIC
DISCONNECT
/*C65*/SET SCHEMA PUBLIC
DISCONNECT
/*C66*/SET SCHEMA PUBLIC
DISCONNECT
/*C67*/SET SCHEMA PUBLIC
DISCONNECT
/*C68*/SET SCHEMA PUBLIC
DISCONNECT
/*C69*/SET SCHEMA PUBLIC
DISCONNECT
/*C70*/SET SCHEMA PUBLIC
DISCONNECT
/*C71*/SET SCHEMA PUBLIC
DISCONNECT
/*C72*/SET SCHEMA PUBLIC
DISCONNECT
/*C73*/SET SCHEMA PUBLIC
DISCONNECT
/*C74*/SET SCHEMA PUBLIC
DISCONNECT
/*C75*/SET SCHEMA PUBLIC
INSERT INTO PASSENGER VALUES(3,'fddfdf','fdfdf','fdfdfd',5555555555)
COMMIT
DISCONNECT
/*C76*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C77*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
INSERT INTO PASSENGER VALUES(1,'Ivan','Ivanov','Ivanovich',1)
INSERT INTO PASSENGER VALUES(2,'Petr','Petrov','Petrovich',2)
COMMIT
DISCONNECT
/*C78*/SET SCHEMA PUBLIC
DISCONNECT
/*C79*/SET SCHEMA PUBLIC
DISCONNECT
/*C80*/SET SCHEMA PUBLIC
DISCONNECT
/*C81*/SET SCHEMA PUBLIC
DISCONNECT
/*C82*/SET SCHEMA PUBLIC
DISCONNECT
/*C83*/SET SCHEMA PUBLIC
INSERT INTO PASSENGER VALUES(3,'fddfdf','fdfdf','fdfdfd',5555555555)
COMMIT
DELETE FROM PASSENGER WHERE PASSENGER_ID=1
INSERT INTO PASSENGER VALUES(1,'Ivan','Ivanov','ffffffff',1)
COMMIT
DISCONNECT
/*C84*/SET SCHEMA PUBLIC
DISCONNECT
/*C85*/SET SCHEMA PUBLIC
DISCONNECT
/*C86*/SET SCHEMA PUBLIC
DISCONNECT
/*C31*/SET SCHEMA PUBLIC
DISCONNECT
/*C87*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C88*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
  CREATE TABLE country ( country_id   BIGINT NOT NULL PRIMARY KEY, country_name VARCHAR(100) )
DISCONNECT
/*C89*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C90*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
DISCONNECT
/*C91*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C92*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
DISCONNECT
/*C93*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C94*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
DISCONNECT
/*C95*/SET SCHEMA PUBLIC
DISCONNECT
/*C96*/SET SCHEMA PUBLIC
DISCONNECT
/*C97*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C98*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
  CREATE TABLE country1 ( country_id   BIGINT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
DISCONNECT
/*C99*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C100*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
DISCONNECT
/*C101*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C102*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
  CREATE TABLE countryes ( country_id   BIGINT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
DISCONNECT
/*C103*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C104*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
  CREATE TABLE countries ( country_id   BIGINT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
INSERT INTO PASSENGER VALUES(1,'Ivan','Ivanov','Ivanovich',1)
INSERT INTO PASSENGER VALUES(2,'Petr','Petrov','Petrovich',2)
COMMIT
DISCONNECT
/*C105*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C106*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
DISCONNECT
/*C107*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C108*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
DISCONNECT
/*C109*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C110*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
DISCONNECT
/*C111*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C112*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C113*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C114*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
DISCONNECT
/*C115*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C116*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
DISCONNECT
/*C117*/SET SCHEMA PUBLIC
DISCONNECT
/*C118*/SET SCHEMA PUBLIC
set schema PUBLIC
drop table COUNTRIES
drop table COUNTRY
drop table COUNTRY1
drop table COUNTRYES
drop table PASSENGER
/*C119*/SET SCHEMA PUBLIC
DISCONNECT
/*C120*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C121*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
  CREATE TABLE country ( country_id   BIGINT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
INSERT INTO COUNTRY VALUES(1,'RUSSIA')
INSERT INTO COUNTRY VALUES(2,'BELARUS')
INSERT INTO COUNTRY VALUES(3,'TURKEY')
INSERT INTO COUNTRY VALUES(4,'EGYPT')
INSERT INTO PASSENGER VALUES(1,'Ivan','Ivanov','Ivanovich',1)
INSERT INTO PASSENGER VALUES(2,'Petr','Petrov','Petrovich',2)
COMMIT
DISCONNECT
/*C122*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C123*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
DISCONNECT
/*C124*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
 DROP TABLE if EXISTS country
DISCONNECT
/*C125*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
  CREATE TABLE country ( country_id   BIGINT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
INSERT INTO COUNTRY VALUES(1,'RUSSIA')
INSERT INTO COUNTRY VALUES(2,'BELARUS')
INSERT INTO COUNTRY VALUES(3,'TURKEY')
INSERT INTO COUNTRY VALUES(4,'EGYPT')
INSERT INTO PASSENGER VALUES(1,'Ivan','Ivanov','Ivanovich',1)
INSERT INTO PASSENGER VALUES(2,'Petr','Petrov','Petrovich',2)
COMMIT
DISCONNECT
/*C126*/SET SCHEMA PUBLIC
DISCONNECT
/*C127*/SET SCHEMA PUBLIC
DISCONNECT
/*C128*/SET SCHEMA PUBLIC
DISCONNECT
/*C130*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
 DROP TABLE if EXISTS country
DISCONNECT
/*C131*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
  CREATE TABLE country ( country_id   BIGINT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
INSERT INTO COUNTRY VALUES(1,'RUSSIA')
INSERT INTO COUNTRY VALUES(2,'BELARUS')
INSERT INTO COUNTRY VALUES(3,'TURKEY')
INSERT INTO COUNTRY VALUES(4,'EGYPT')
INSERT INTO PASSENGER VALUES(1,'Ivan','Ivanov','Ivanovich',1)
INSERT INTO PASSENGER VALUES(2,'Petr','Petrov','Petrovich',2)
COMMIT
DISCONNECT
/*C129*/SET SCHEMA PUBLIC
DISCONNECT
/*C132*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
 DROP TABLE if EXISTS country
DISCONNECT
/*C133*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
  CREATE TABLE country ( country_id   BIGINT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
INSERT INTO COUNTRY VALUES(1,'RUSSIA')
INSERT INTO COUNTRY VALUES(2,'BELARUS')
INSERT INTO COUNTRY VALUES(3,'TURKEY')
INSERT INTO COUNTRY VALUES(4,'EGYPT')
INSERT INTO PASSENGER VALUES(1,'Ivan','Ivanov','Ivanovich',1)
INSERT INTO PASSENGER VALUES(2,'Petr','Petrov','Petrovich',2)
COMMIT
DISCONNECT
/*C134*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
 DROP TABLE if EXISTS country
DISCONNECT
/*C135*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
  CREATE TABLE country ( country_id   BIGINT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
INSERT INTO COUNTRY VALUES(1,'RUSSIA')
INSERT INTO COUNTRY VALUES(2,'BELARUS')
INSERT INTO COUNTRY VALUES(3,'TURKEY')
INSERT INTO COUNTRY VALUES(4,'EGYPT')
INSERT INTO PASSENGER VALUES(1,'Ivan','Ivanov','Ivanovich',1)
INSERT INTO PASSENGER VALUES(2,'Petr','Petrov','Petrovich',2)
COMMIT
DISCONNECT
/*C136*/SET SCHEMA PUBLIC
DISCONNECT
/*C137*/SET SCHEMA PUBLIC
DISCONNECT
/*C138*/SET SCHEMA PUBLIC
DISCONNECT
/*C139*/SET SCHEMA PUBLIC
DISCONNECT
/*C140*/SET SCHEMA PUBLIC
DISCONNECT
/*C141*/SET SCHEMA PUBLIC
DISCONNECT
/*C142*/SET SCHEMA PUBLIC
DISCONNECT
/*C143*/SET SCHEMA PUBLIC
DISCONNECT
/*C145*/SET SCHEMA PUBLIC
DISCONNECT
/*C146*/SET SCHEMA PUBLIC
DISCONNECT
/*C147*/SET SCHEMA PUBLIC
DISCONNECT
/*C148*/SET SCHEMA PUBLIC
DISCONNECT
/*C149*/SET SCHEMA PUBLIC
DISCONNECT
/*C150*/SET SCHEMA PUBLIC
DISCONNECT
/*C144*/SET SCHEMA PUBLIC
DISCONNECT
/*C151*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
 DROP TABLE if EXISTS country
DISCONNECT
/*C152*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
  CREATE TABLE country ( country_id   BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
  CREATE TABLE flight ( flight_id     BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), flight_number VARCHAR(100) NOT NULL, airport_id    BIGINT       NOT NULL, country_id    BIGINT       NOT NULL, FOREIGN KEY (country_id) REFERENCES country (country_id) )
INSERT INTO COUNTRY VALUES(1,'RUSSIA')
INSERT INTO COUNTRY VALUES(2,'BELARUS')
INSERT INTO COUNTRY VALUES(3,'TURKEY')
INSERT INTO COUNTRY VALUES(4,'EGYPT')
INSERT INTO PASSENGER VALUES(1,'Ivan','Ivanov','Ivanovich',1)
INSERT INTO PASSENGER VALUES(2,'Petr','Petrov','Petrovich',2)
COMMIT
DISCONNECT
/*C153*/SET SCHEMA PUBLIC
DISCONNECT
/*C154*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C155*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
DISCONNECT
/*C156*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
 DROP TABLE if EXISTS flight
 DROP TABLE if EXISTS country
DISCONNECT
/*C157*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
  CREATE TABLE country ( country_id   BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
  CREATE TABLE flight ( flight_id     BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), flight_number VARCHAR(100) NOT NULL, airport_id    BIGINT       NOT NULL, country_id    BIGINT       NOT NULL, FOREIGN KEY (country_id) REFERENCES country (country_id) )
INSERT INTO COUNTRY VALUES(1,'RUSSIA')
INSERT INTO COUNTRY VALUES(2,'BELARUS')
INSERT INTO COUNTRY VALUES(3,'TURKEY')
INSERT INTO COUNTRY VALUES(4,'EGYPT')
INSERT INTO PASSENGER VALUES(1,'Ivan','Ivanov','Ivanovich',1)
INSERT INTO PASSENGER VALUES(2,'Petr','Petrov','Petrovich',2)
COMMIT
DISCONNECT
/*C158*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
 DROP TABLE if EXISTS flight
 DROP TABLE if EXISTS country
DISCONNECT
/*C159*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
  CREATE TABLE country ( country_id   BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
  CREATE TABLE flight ( flight_id     BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), flight_number VARCHAR(100) NOT NULL, airport_id    BIGINT       NOT NULL, country_id    BIGINT       NOT NULL, FOREIGN KEY (country_id) REFERENCES country (country_id) )
INSERT INTO COUNTRY VALUES(1,'RUSSIA')
INSERT INTO COUNTRY VALUES(2,'BELARUS')
INSERT INTO COUNTRY VALUES(3,'TURKEY')
INSERT INTO COUNTRY VALUES(4,'EGYPT')
INSERT INTO PASSENGER VALUES(1,'Ivan','Ivanov','Ivanovich',1)
INSERT INTO PASSENGER VALUES(2,'Petr','Petrov','Petrovich',2)
COMMIT
DISCONNECT
/*C160*/SET SCHEMA PUBLIC
DISCONNECT
/*C161*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
 DROP TABLE if EXISTS flight
 DROP TABLE if EXISTS country
DISCONNECT
/*C162*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
  CREATE TABLE country ( country_id   BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
  CREATE TABLE flight ( flight_id     BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), flight_number VARCHAR(100) NOT NULL, airport_id    BIGINT       NOT NULL, country_id    BIGINT       NOT NULL, FOREIGN KEY (country_id) REFERENCES country (country_id) )
INSERT INTO COUNTRY VALUES(1,'RUSSIA')
INSERT INTO COUNTRY VALUES(2,'BELARUS')
INSERT INTO COUNTRY VALUES(3,'TURKEY')
INSERT INTO COUNTRY VALUES(4,'EGYPT')
INSERT INTO PASSENGER VALUES(1,'Ivan','Ivanov','Ivanovich',1)
INSERT INTO PASSENGER VALUES(2,'Petr','Petrov','Petrovich',2)
COMMIT
DISCONNECT
/*C163*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
 DROP TABLE if EXISTS flight
 DROP TABLE if EXISTS country
DISCONNECT
/*C164*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
  CREATE TABLE country ( country_id   BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
  CREATE TABLE flight ( flight_id     BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), flight_number VARCHAR(100) NOT NULL, airport_id    BIGINT       NOT NULL, country_id    BIGINT       NOT NULL, FOREIGN KEY (country_id) REFERENCES country (country_id) )
  CREATE TABLE airport ( airport_id BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), airport_name VARCHAR(100) NOT NULL, country_id    BIGINT       NOT NULL, FOREIGN KEY (country_id) REFERENCES country (country_id) )
INSERT INTO COUNTRY VALUES(1,'RUSSIA')
INSERT INTO COUNTRY VALUES(2,'BELARUS')
INSERT INTO COUNTRY VALUES(3,'TURKEY')
INSERT INTO COUNTRY VALUES(4,'EGYPT')
INSERT INTO PASSENGER VALUES(1,'Ivan','Ivanov','Ivanovich',1)
INSERT INTO PASSENGER VALUES(2,'Petr','Petrov','Petrovich',2)
COMMIT
DISCONNECT
/*C165*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
 DROP TABLE if EXISTS flight
 DROP TABLE if EXISTS airport
 DROP TABLE if EXISTS country
DISCONNECT
/*C166*/SET SCHEMA PUBLIC
 /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL )
  CREATE TABLE country ( country_id   BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
  CREATE TABLE flight ( flight_id     BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), flight_number VARCHAR(100) NOT NULL, airport_id    BIGINT       NOT NULL, country_id    BIGINT       NOT NULL, FOREIGN KEY (country_id) REFERENCES country (country_id) )
  CREATE TABLE airport ( airport_id BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), airport_name VARCHAR(100) NOT NULL, country_id    BIGINT       NOT NULL, FOREIGN KEY (country_id) REFERENCES country (country_id) )
INSERT INTO COUNTRY VALUES(1,'RUSSIA')
INSERT INTO COUNTRY VALUES(2,'BELARUS')
INSERT INTO COUNTRY VALUES(3,'TURKEY')
INSERT INTO COUNTRY VALUES(4,'EGYPT')
INSERT INTO PASSENGER VALUES(1,'Ivan','Ivanov','Ivanovich',1)
INSERT INTO PASSENGER VALUES(2,'Petr','Petrov','Petrovich',2)
COMMIT
DISCONNECT
/*C167*/SET SCHEMA PUBLIC
DISCONNECT
/*C168*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
 DROP TABLE if EXISTS flight
 DROP TABLE if EXISTS airport
 DROP TABLE if EXISTS country
DISCONNECT
/*C169*/SET SCHEMA PUBLIC
DISCONNECT
/*C170*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
 DROP TABLE if EXISTS flight
 DROP TABLE if EXISTS airport
 DROP TABLE if EXISTS country
DISCONNECT
/*C171*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS flight
 DROP TABLE if EXISTS airport
 DROP TABLE if EXISTS country
 DROP TABLE if EXISTS passenger
DISCONNECT
/*C172*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS flight
 DROP TABLE if EXISTS airport
 DROP TABLE if EXISTS country
 DROP TABLE if EXISTS passenger
DISCONNECT
/*C173*/SET SCHEMA PUBLIC
 CREATE TABLE country ( country_id   BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
  CREATE TABLE flight ( flight_id     BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), flight_number VARCHAR(100) NOT NULL, airport_id    BIGINT       NOT NULL, country_id    BIGINT       NOT NULL, FOREIGN KEY (country_id) REFERENCES country (country_id) )
  CREATE TABLE airport ( airport_id   BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), airport_name VARCHAR(100) NOT NULL, country_id   BIGINT       NOT NULL, FOREIGN KEY (country_id) REFERENCES country (country_id) )
INSERT INTO COUNTRY VALUES(1,'RUSSIA')
INSERT INTO COUNTRY VALUES(2,'BELARUS')
INSERT INTO COUNTRY VALUES(3,'TURKEY')
INSERT INTO COUNTRY VALUES(4,'EGYPT')
COMMIT
  /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL, FOREIGN KEY (flight_id) REFERENCES flight (flight_id) )
DISCONNECT
/*C174*/SET SCHEMA PUBLIC
DISCONNECT
/*C175*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
 DROP TABLE if EXISTS flight
 DROP TABLE if EXISTS airport
 DROP TABLE if EXISTS country
DISCONNECT
/*C176*/SET SCHEMA PUBLIC
 CREATE TABLE country ( country_id   BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
  CREATE TABLE flight ( flight_id     BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), flight_number VARCHAR(100) NOT NULL, airport_id    BIGINT       NOT NULL, country_id    BIGINT       NOT NULL, FOREIGN KEY (country_id) REFERENCES country (country_id) )
  CREATE TABLE airport ( airport_id   BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), airport_name VARCHAR(100) NOT NULL, country_id   BIGINT       NOT NULL, FOREIGN KEY (country_id) REFERENCES country (country_id) )
INSERT INTO COUNTRY VALUES(1,'RUSSIA')
INSERT INTO COUNTRY VALUES(2,'BELARUS')
INSERT INTO COUNTRY VALUES(3,'TURKEY')
INSERT INTO COUNTRY VALUES(4,'EGYPT')
COMMIT
  /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL, FOREIGN KEY (flight_id) REFERENCES flight (flight_id) )
DISCONNECT
/*C177*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
 DROP TABLE if EXISTS flight
 DROP TABLE if EXISTS airport
 DROP TABLE if EXISTS country
DISCONNECT
/*C178*/SET SCHEMA PUBLIC
 CREATE TABLE country ( country_id   BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
  CREATE TABLE flight ( flight_id     BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), flight_number VARCHAR(100) NOT NULL, airport_id    BIGINT       NOT NULL, country_id    BIGINT       NOT NULL, FOREIGN KEY (country_id) REFERENCES country (country_id) )
  CREATE TABLE airport ( airport_id   BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), airport_name VARCHAR(100) NOT NULL, country_id   BIGINT       NOT NULL, FOREIGN KEY (country_id) REFERENCES country (country_id) )
INSERT INTO COUNTRY VALUES(1,'RUSSIA')
INSERT INTO COUNTRY VALUES(2,'BELARUS')
INSERT INTO COUNTRY VALUES(3,'TURKEY')
INSERT INTO COUNTRY VALUES(4,'EGYPT')
COMMIT
  /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL, FOREIGN KEY (flight_id) REFERENCES flight (flight_id) )
DISCONNECT
/*C179*/SET SCHEMA PUBLIC
 /** * Deletes the passenger table. */ DROP TABLE if EXISTS passenger
 /** * Deletes the flight table. */ DROP TABLE if EXISTS flight
 /** * Deletes the airport table. */ DROP TABLE if EXISTS airport
 /** * Deletes the country table. */ DROP TABLE if EXISTS country
DISCONNECT
/*C180*/SET SCHEMA PUBLIC
 CREATE TABLE country ( country_id   BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), country_name VARCHAR(100) NOT NULL )
  CREATE TABLE flight ( flight_id     BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), flight_number VARCHAR(100) NOT NULL, airport_id    BIGINT       NOT NULL, country_id    BIGINT       NOT NULL, FOREIGN KEY (country_id) REFERENCES country (country_id) )
  CREATE TABLE airport ( airport_id   BIGINT       NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), airport_name VARCHAR(100) NOT NULL, country_id   BIGINT       NOT NULL, FOREIGN KEY (country_id) REFERENCES country (country_id) )
INSERT INTO COUNTRY VALUES(1,'RUSSIA')
INSERT INTO COUNTRY VALUES(2,'BELARUS')
INSERT INTO COUNTRY VALUES(3,'TURKEY')
INSERT INTO COUNTRY VALUES(4,'EGYPT')
COMMIT
  /** * Creates a table of passengers. * @param passenger_id passenger's id, which auto-generated as a unique identifier for the record * @param first_name passenger's first name * @param last_name passenger's last name * @param patronymic passenger's patronymic * @param flight_id passenger's flight's number */ CREATE TABLE passenger ( passenger_id BIGINT      NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START with 1 INCREMENT by 1), first_name   VARCHAR(50) NOT NULL, last_name    VARCHAR(50) NOT NULL, patronymic   VARCHAR(50) NOT NULL, flight_id    BIGINT      NOT NULL, FOREIGN KEY (flight_id) REFERENCES flight (flight_id) )
DISCONNECT
